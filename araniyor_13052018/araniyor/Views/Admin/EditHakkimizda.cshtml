@model araniyor.Models.AboutUs

@{
    ViewBag.Title = "EditHakkimizda";
    Layout = "~/Views/Shared/_LayoutAdminPanel.cshtml";
}
<style>
    /* FILE UPLOAD START*/
    /*just bg and body style*/
    .container {
        /*background-color: #1E2832;*/
        padding-bottom: 20px;
        margin-top: 10px;
        border-radius: 5px;
    }

    .center {
        text-align: center;
    }

    #top {
        margin-top: 20px;
    }

    .btn-container {
        background: #fff;
        border-radius: 5px;
        padding-bottom: 20px;
        margin-bottom: 20px;
    }

    .white {
        color: white;
    }

    .imgupload {
        color: #1E2832;
        padding-top: 40px;
        font-size: 7em;
    }

    #namefile {
        color: black;
    }

    h4 > strong {
        color: #ff3f3f;
    }

    .btn-primary {
        border-color: #ff3f3f !important;
        color: #ffffff;
        text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
        background-color: #ff3f3f !important;
        border-color: #ff3f3f !important;
    }

    /*these two are set to not display at start*/
    .imgupload.ok {
        display: none;
        color: green;
    }

    .imgupload.stop {
        display: none;
        color: red;
    }


    /*this sets the actual file input to overlay our button*/
    #fileup {
        opacity: 0;
        -moz-opacity: 0;
        filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);
        width: 200px;
        cursor: pointer;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        bottom: 40px;
        height: 50px;
    }

    /*switch between input and not active input*/
    #submitbtn {
        padding: 5px 50px;
        display: none;
    }

    #fakebtn {
        padding: 5px 40px;
    }


    /*www.emilianocostanzo.com*/
    #sign {
        color: #1E2832;
        position: fixed;
        right: 10px;
        bottom: 10px;
        text-shadow: 0px 0px 0px #1E2832;
        transition: all.3s;
    }

        #sign:hover {
            color: #1E2832;
            text-shadow: 0px 0px 5px #1E2832;
        }
    /* FILE UPLOAD FINISH*/
</style>

@using (Html.BeginForm("EditHakkimizda", "Admin", new
{
    Hakkimizda = Model.Hakkimizda,
    Misyon = Model.Misyon
                                                                ,
    Vizyon = Model.Vizyon,
    Adres = Model.Adres,
    Telefon = Model.Telefon,
    EPosta = Model.EPosta
                                                                ,
    Facebook = Model.Facebook
                                                                ,
    Twitter = Model.Twitter
                                                                ,
    LinkedIn = Model.LinkedIn
                                                                ,
    KullaniciSozlesmesi = Model.KullaniciSozlesmesi
}, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Düzenleme Ekranı</h4>
        <hr />

        @if (TempData["mesaj"] != null)
        {
            <div class="alert alert-warning">
                <span class="glyphicon glyphicon-search"></span>
                @TempData["mesaj"].ToString()
            </div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Hakkimizda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Hakkimizda, 10, 121, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hakkimizda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HakkimizdaResim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.picture, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class="row">
                    <div class="col-md-6 col-md-offset-3 center">
                        <div class="btn-container">
                            <!--the three icons: default, ok file (img), error file (not an img)-->
                            <h1 class="imgupload"><i class="fa fa-file-image-o"></i></h1>
                            <h1 class="imgupload ok"><i class="fa fa-check"></i></h1>
                            <h1 class="imgupload stop"><i class="fa fa-times"></i></h1>
                            <!--this field changes dinamically displaying the filename we are trying to upload-->
                            <p id="namefile">Sadece bu uzantılar geçerlidir! (jpg,jpeg,bmp,png)</p>
                            <!--our custom btn which which stays under the actual one-->
                            <button type="button" id="btnup" class="btn btn-primary btn-lg">Resim Seç</button>
                            <!--this is the actual file input, is set with opacity=0 beacause we wanna see our custom one-->
                            <input type="file" value="" name="HakkimizdaResim" id="fileup">
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.HakkimizdaResim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Misyon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Misyon, 10, 121, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Misyon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MisyonResim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.picture, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class="row">
                    <div class="col-md-6 col-md-offset-3 center">
                        <div class="btn-container">
                            <!--the three icons: default, ok file (img), error file (not an img)-->
                            <h1 class="imgupload"><i class="fa fa-file-image-o"></i></h1>
                            <h1 class="imgupload ok"><i class="fa fa-check"></i></h1>
                            <h1 class="imgupload stop"><i class="fa fa-times"></i></h1>
                            <!--this field changes dinamically displaying the filename we are trying to upload-->
                            <p id="namefile">Sadece bu uzantılar geçerlidir! (jpg,jpeg,bmp,png)</p>
                            <!--our custom btn which which stays under the actual one-->
                            <button type="button" id="btnup" class="btn btn-primary btn-lg">Resim Seç</button>
                            <!--this is the actual file input, is set with opacity=0 beacause we wanna see our custom one-->
                            <input type="file" value="" name="MisyonResim" id="fileup">
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.MisyonResim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vizyon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Vizyon, 10, 121, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vizyon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VizyonResim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.picture, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class="row">
                    <div class="col-md-6 col-md-offset-3 center">
                        <div class="btn-container">
                            <!--the three icons: default, ok file (img), error file (not an img)-->
                            <h1 class="imgupload"><i class="fa fa-file-image-o"></i></h1>
                            <h1 class="imgupload ok"><i class="fa fa-check"></i></h1>
                            <h1 class="imgupload stop"><i class="fa fa-times"></i></h1>
                            <!--this field changes dinamically displaying the filename we are trying to upload-->
                            <p id="namefile">Sadece bu uzantılar geçerlidir! (jpg,jpeg,bmp,png)</p>
                            <!--our custom btn which which stays under the actual one-->
                            <button type="button" id="btnup" class="btn btn-primary btn-lg">Resim Seç</button>
                            <!--this is the actual file input, is set with opacity=0 beacause we wanna see our custom one-->
                            <input type="file" value="" name="VizyonResim" id="fileup">
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.VizyonResim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adres, new { htmlAttributes = new { placeholder = "Adresinizi link olarak Ekleyiniz", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EPosta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EPosta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EPosta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Twitter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkedIn, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SliderResim1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.picture, new { htmlAttributes = new { @class = "form-control" } })*@
                            <div class="row">
                                <div class="col-md-6 col-md-offset-3 center">
                                    <div class="btn-container">
                                        <!--the three icons: default, ok file (img), error file (not an img)-->
                                        <h1 class="imgupload"><i class="fa fa-file-image-o"></i></h1>
                                        <h1 class="imgupload ok"><i class="fa fa-check"></i></h1>
                                        <h1 class="imgupload stop"><i class="fa fa-times"></i></h1>
                                        <!--this field changes dinamically displaying the filename we are trying to upload-->
                                        <p id="namefile">Sadece bu uzantılar geçerlidir! (jpg,jpeg,bmp,png)</p>
                                        <!--our custom btn which which stays under the actual one-->
                                        <button type="button" id="btnup" class="btn btn-primary btn-lg">Resim Seç</button>
                                        <!--this is the actual file input, is set with opacity=0 beacause we wanna see our custom one-->
                                        <input type="file" value="" name="SliderResim1" id="fileup">
                                    </div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.SliderResim1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SliderResim2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.picture, new { htmlAttributes = new { @class = "form-control" } })*@
                            <div class="row">
                                <div class="col-md-6 col-md-offset-3 center">
                                    <div class="btn-container">
                                        <!--the three icons: default, ok file (img), error file (not an img)-->
                                        <h1 class="imgupload"><i class="fa fa-file-image-o"></i></h1>
                                        <h1 class="imgupload ok"><i class="fa fa-check"></i></h1>
                                        <h1 class="imgupload stop"><i class="fa fa-times"></i></h1>
                                        <!--this field changes dinamically displaying the filename we are trying to upload-->
                                        <p id="namefile">Sadece bu uzantılar geçerlidir! (jpg,jpeg,bmp,png)</p>
                                        <!--our custom btn which which stays under the actual one-->
                                        <button type="button" id="btnup" class="btn btn-primary btn-lg">Resim Seç</button>
                                        <!--this is the actual file input, is set with opacity=0 beacause we wanna see our custom one-->
                                        <input type="file" value="" name="SliderResim2" id="fileup">
                                    </div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.SliderResim2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SliderResim3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.picture, new { htmlAttributes = new { @class = "form-control" } })*@
                            <div class="row">
                                <div class="col-md-6 col-md-offset-3 center">
                                    <div class="btn-container">
                                        <!--the three icons: default, ok file (img), error file (not an img)-->
                                        <h1 class="imgupload"><i class="fa fa-file-image-o"></i></h1>
                                        <h1 class="imgupload ok"><i class="fa fa-check"></i></h1>
                                        <h1 class="imgupload stop"><i class="fa fa-times"></i></h1>
                                        <!--this field changes dinamically displaying the filename we are trying to upload-->
                                        <p id="namefile">Sadece bu uzantılar geçerlidir! (jpg,jpeg,bmp,png)</p>
                                        <!--our custom btn which which stays under the actual one-->
                                        <button type="button" id="btnup" class="btn btn-primary btn-lg">Resim Seç</button>
                                        <!--this is the actual file input, is set with opacity=0 beacause we wanna see our custom one-->
                                        <input type="file" value="" name="SliderResim3" id="fileup">
                                    </div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.SliderResim3, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SliderResim4, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.picture, new { htmlAttributes = new { @class = "form-control" } })*@
                            <div class="row">
                                <div class="col-md-6 col-md-offset-3 center">
                                    <div class="btn-container">
                                        <!--the three icons: default, ok file (img), error file (not an img)-->
                                        <h1 class="imgupload"><i class="fa fa-file-image-o"></i></h1>
                                        <h1 class="imgupload ok"><i class="fa fa-check"></i></h1>
                                        <h1 class="imgupload stop"><i class="fa fa-times"></i></h1>
                                        <!--this field changes dinamically displaying the filename we are trying to upload-->
                                        <p id="namefile">Sadece bu uzantılar geçerlidir! (jpg,jpeg,bmp,png)</p>
                                        <!--our custom btn which which stays under the actual one-->
                                        <button type="button" id="btnup" class="btn btn-primary btn-lg">Resim Seç</button>
                                        <!--this is the actual file input, is set with opacity=0 beacause we wanna see our custom one-->
                                        <input type="file" value="" name="SliderResim4" id="fileup">
                                    </div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.SliderResim4, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KullaniciSozlesmesi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.KullaniciSozlesmesi, 10, 121, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KullaniciSozlesmesi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Kaydet" class="btn btn-success" />
            </div>
        </div>
    </div>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@*<script type="text/javascript">
        $('#fileup').change(function () {
            //here we take the file extension and set an array of valid extensions
            var res = $('#fileup').val();
            var arr = res.split("\\");
            var filename = arr.slice(-1)[0];
            filextension = filename.split(".");
            filext = "." + filextension.slice(-1)[0];
            valid = [".jpg", ".png", ".jpeg", ".bmp"];
            //if file is not valid we show the error icon, the red alert, and hide the submit button
            if (valid.indexOf(filext.toLowerCase()) == -1) {
                $(".imgupload").hide("slow");
                $(".imgupload.ok").hide("slow");
                $(".imgupload.stop").show("slow");

                $('#namefile').css({ "color": "red", "font-weight": 700 });
                $('#namefile').html("File " + filename + " is not  pic!");

                $("#submitbtn").hide();
                $("#fakebtn").show();
            } else {
                //if file is valid we show the green alert and show the valid submit
                $(".imgupload").hide("slow");
                $(".imgupload.stop").hide("slow");
                $(".imgupload.ok").show("slow");

                $('#namefile').css({ "color": "green", "font-weight": 700 });
                $('#namefile').html(filename);

                $("#submitbtn").show();
                $("#fakebtn").hide();
            }
        });
    </script>*@